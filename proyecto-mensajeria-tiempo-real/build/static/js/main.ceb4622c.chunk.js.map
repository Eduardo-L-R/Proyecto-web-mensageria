{"version":3,"sources":["firebase/config-utils.js","store/actions/user-actions.js","components/iniciar-sesion/SignIn.jsx","components/registrarse/SignUp.jsx","components/panel-inicio/contenedor-chat/Componentes-ChatContainer/Navbar.jsx","components/panel-inicio/contenedor-chat/Componentes-ChatContainer/MessageList.jsx","components/panel-inicio/contenedor-chat/Componentes-ChatContainer/MessageEditor.jsx","components/panel-inicio/contenedor-chat/ChatContainer.jsx","components/panel-inicio/sidebar/Componentes-Sidebar/Navbar.jsx","components/panel-inicio/sidebar/Componentes-Sidebar/SearchBar.jsx","components/panel-inicio/sidebar/Componentes-Sidebar/ConversationList.jsx","components/panel-inicio/sidebar/SideBar.jsx","components/panel-inicio/sidebar/Componentes-Sidebar/UserList.jsx","components/panel-inicio/sidebar/Componentes-Sidebar/NewConversation.jsx","components/panel-inicio/PanelDeInicio.jsx","components/enrutador.jsx","App.js","serviceWorker.js","store/reducers/user-reducer.js","store/store.js","index.js"],"names":["firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","setCurrentRegister","event","type","payload","name","target","value","setCurrentLogin","setUser","information","Information","setMessages","messages","contacto","setCurrentClear","stateToClear","signIn","callback","dispatch","getState","user","currentLogin","email","password","signInWithEmailAndPassword","then","alert","onAuthStateChanged","userInformation","catch","error","errorCode","code","errorMessage","message","register","currentRegister","createUserWithEmailAndPassword","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","connect","state","props","classes","history","useHistory","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","Typography","variant","noValidate","TextField","required","fullWidth","onChange","e","id","label","autoComplete","autoFocus","Button","color","onClick","preventDefault","ruta","push","to","Box","mt","agregandoUsuarioDB","firstName","lastName","Promise","resolve","reject","a","firestore","collection","add","Admin","doc","set","1","Email","Nombre","PhotoURL","otros","Container","maxWidth","justify","Link","href","offset","mixins","toolbar","marginRight","grow","flexGrow","icon","bar","currentEmail","currentUser","Contacts","currentContacts","Mensajes","currentMensajes","ContactoMensajes","currentContactMensaje","informacion","AppBar","position","Toolbar","undefined","valorAvatar","paddingTop","flex","overflow","btn","padding","userMsg","right","justifyContent","List","arregloMensajes","mensaje","ListItem","align","MostrarMensajes","top","bottom","input","border","borderRadius","editingMessage","currentEditingMessage","clean","setEditingMessage","mensajeNuevo","InputBase","multiline","IconButton","update","Object","keys","docRef","console","log","flexFlow","ChatContainer","bgColor","usuario","nombre","split","aria-label","toggle","ImprimirUsuario","searchBar","searchInput","paddingLeft","searchIcon","SearchBar","text","textAlign","mensajes","Contactos","arregloImpresion","divider","onSnapshot","exists","data","RecibirMensajes","ListItemAvatar","ListItemText","primary","ImpresionContactos","borderRight","SideBar","ServerContacts","currentServerContacts","setServerContacts","serverContacts","useEffect","subscribe","arregloContactosAgregables","forEach","ArregloEtiquetas","map","AgregandoNuevoContacto","CargandoContactosDisponibles","drawerWidth","header","backButton","marginLeft","NewConversation","Drawer","open","onClose","useStyle","setContacts","get","doc2","doc3","useState","setOpen","handleToggle","boolean","Enrutador","exact","path","App","Boolean","window","location","hostname","match","INITIAL_STATE","userReducer","previousState","action","reducers","combineReducers","store","createStore","applyMiddleware","reduxThunk","logger","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ceb4622c.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBfPkCrUhfkH4VUZR0cg2IGuKKjajrNRoo\",\r\n  authDomain: \"proyecto-web-mensajeria.firebaseapp.com\",\r\n  databaseURL: \"https://proyecto-web-mensajeria.firebaseio.com\",\r\n  projectId: \"proyecto-web-mensajeria\",\r\n  storageBucket: \"proyecto-web-mensajeria.appspot.com\",\r\n  messagingSenderId: \"780038003961\",\r\n  appId: \"1:780038003961:web:c27927e55fb4f276409628\"\r\n};\r\n\r\n//Para evitar que se ejecute dos veces el método initializeApp\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nexport default firebase.auth();\r\n","import auth from \"../../firebase/config-utils\";\r\n\r\n\r\nexport const setCurrentRegister = event => {\r\n  return {\r\n    type: \"SET_CURRENT_REGISTER\",\r\n    payload: {\r\n      name: event.target.name,\r\n      value: event.target.value\r\n    }\r\n  };\r\n};\r\n\r\nexport const setCurrentLogin = event => {\r\n  return {\r\n    type: \"SET_CURRENT_LOGIN\",\r\n    payload: {\r\n      name: event.target.name,\r\n      value: event.target.value\r\n    }\r\n  };\r\n};\r\n\r\nexport const setUser = information => {\r\n  return {\r\n    type: \"SET_CURRENT_USER\",\r\n    payload: {\r\n      Information : information,\r\n    }\r\n  };\r\n};\r\n\r\nexport const setContacts = (contacts) => {\r\n  return {type : \"SET_USER_CONTACTS\",\r\n          payload: contacts}; \r\n}\r\n\r\nexport const setMessages = (messages,contacto) => {\r\n  return {type : \"SET_USER_MESSAGES\",\r\n          payload: {messages,contacto}}; \r\n}\r\n\r\nexport const setEditingMessage = (message) => {\r\n  return {type : \"SET_EDITING_MESSAGE\",\r\n          payload: {message}}; \r\n}\r\n\r\nexport const setServerContacts = (ServerContacts) => {\r\n  return {type : \"SET_SERVER_CONTACTS\",\r\n          payload: {ServerContacts}}; \r\n}\r\n\r\nexport const setCurrentClear = (stateToClear) => {\r\n  if(stateToClear === \"clearRegister\"){\r\n    return {type: \"CLEAR_REGISTER\"}\r\n  }\r\n  else if(stateToClear === \"clearLogin\"){\r\n    return {type: \"CLEAR_LOGIN\"}\r\n  }\r\n  else if(stateToClear === \"clearEditingMessage\"){\r\n    return {type: \"CLEAR_EDITING_MESSAGE\"}\r\n  }\r\n}\r\n\r\nexport const userInformation = (information) => {\r\n  return {type : \"STORAGE_USER_INFO\",\r\n          payload: information}; \r\n}\r\n\r\nexport const signIn = (callback) => {\r\n  return (dispatch, getState) => {\r\n    let { email, password } = getState().user.currentLogin;\r\n    auth.signInWithEmailAndPassword(email, password).then(() =>\r\n      {alert(\"autentificado correctamente\");\r\n      callback(\"/Panel-inicio\");\r\n      auth.onAuthStateChanged(function(user) {\r\n        if (user) {\r\n          var email = user.email;\r\n          var information = {\r\n            \"email\": email,\r\n          };\r\n          dispatch(userInformation(information));\r\n        } else {\r\n          // User is signed out.\r\n        }\r\n        });\r\n      }\r\n    ).catch(function(error) {\r\n      // Handle Errors here.\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      alert(errorCode, errorMessage);\r\n      dispatch(setCurrentClear(\"clearLogin\"));\r\n      // ...\r\n    });\r\n  };\r\n};\r\n\r\nexport const register = (callback) => {\r\n  return (dispatch, getState) => {\r\n    let { email, password } = getState().user.currentRegister;\r\n    auth.createUserWithEmailAndPassword(email, password)\r\n    .then(()=>{\r\n      alert(\"Registrado exitosamente\");\r\n      callback(\"/\");\r\n    })\r\n    .catch(function(error) {\r\n      // Handle Errors here.\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      alert(errorCode, errorMessage);\r\n      dispatch(setCurrentClear(\"clearRegister\"));\r\n    });\r\n    \r\n  };\r\n};\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//Dependencias de react-router-dom importadas\r\nimport {Link as LinkRouter} from 'react-router-dom';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n//Dependencias de redux importadas\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setCurrentRegister,\r\n  setCurrentLogin,\r\n  register,\r\n  signIn\r\n} from \"../../store/actions/user-actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction SignIn(props) {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              value={props.user.currentLogin.email}\r\n              onChange={(e)=>props.setCurrentLogin(e)}\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              value={props.user.currentLogin.password}\r\n              onChange={(e)=>props.setCurrentLogin(e)}\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={(e)=>{ e.preventDefault();\r\n                              props.signIn((ruta) => history.push(ruta));\r\n               }}>\r\n            \r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n              </Grid>\r\n              <Grid item>\r\n                  <LinkRouter to={'/Registro'}>\r\n                  {\"Don't have an account? Sign Up\"}\r\n                  </LinkRouter>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\n// Acciones y states de redux importadas\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCurrentRegister: event => dispatch(setCurrentRegister(event)),\r\n    setCurrentLogin: event => dispatch(setCurrentLogin(event)),\r\n    register: () => dispatch(register()),\r\n    signIn: (callback) => dispatch(signIn(callback))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignIn);","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport firebase from 'firebase';\r\n\r\n//Dependencias de react-router-dom importadas\r\nimport {Link as LinkRouter} from 'react-router-dom';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n//Dependencias de redux importadas\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setCurrentRegister,\r\n  setCurrentLogin,\r\n  register\r\n} from \"../../store/actions/user-actions\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction SignUp(props) {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  function agregandoUsuarioDB(firstName, lastName, email){\r\n    // console.log(\"1firestore\",firstName,lastName,email);\r\n    return new Promise(\r\n      async (resolve,reject)=>{\r\n        try{\r\n          await firebase.firestore().collection(firstName +\" \"+lastName).add({\r\n            Admin: \"Creado para generar coleccion.\",\r\n            });\r\n          // console.log(\"2firestore\",firstName,lastName,email);\r\n          await firebase.firestore().collection(firstName +\" \"+lastName).doc(\"Contactos\").set({\r\n              [firstName +\" \"+lastName]: [\"mensajes bajo\", \"hora\", firstName +\" \"+lastName],\r\n            });\r\n          // console.log(\"3firestore\",firstName,lastName,email);\r\n          await firebase.firestore().collection(firstName +\" \"+lastName).doc(firstName +\" \"+lastName).set({\r\n            1: [\"mensajes bajo\", \"hora\", \"Bienvenido, los mensajes aca son privados\"],\r\n            });\r\n              // console.log(\"4firestore\",firstName,lastName,email);\r\n          await firebase.firestore().collection(\"Usuarios\").doc(firstName +\" \"+lastName).set({\r\n            Email: email,\r\n            Nombre: firstName +\" \"+lastName,\r\n            PhotoURL: \"www.google.com\",\r\n            otros: \"....\",\r\n            });\r\n          // console.log(\"5firestore\",firstName,lastName,email);\r\n          await firebase.firestore().collection(\"emailUsuarios\").doc(email).set({\r\n            Nombre: firstName +\" \"+lastName,\r\n            });\r\n          resolve(true);  \r\n        }\r\n        catch(e){\r\n          reject(e);\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={props.user.currentRegister.firstName}\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                onChange={(e)=>props.setCurrentRegister(e)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={props.user.currentRegister.lastName}\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                onChange={(e)=>props.setCurrentRegister(e)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={props.user.currentRegister.email}\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={(e)=>props.setCurrentRegister(e)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={props.user.currentRegister.password}\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(e)=>props.setCurrentRegister(e)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={async (e)=>{ e.preventDefault();\r\n                            await agregandoUsuarioDB(props.user.currentRegister.firstName,props.user.currentRegister.lastName,props.user.currentRegister.email);\r\n                            props.register((ruta) => history.push(ruta));}}\r\n          >\r\n            Register\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                <LinkRouter to={'/Inicio'}>\r\n                Already have an account? Sign in  \r\n                </LinkRouter>\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        {/* <Copyright /> */}\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// Acciones y states de redux importadas\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCurrentRegister: event => dispatch(setCurrentRegister(event)),\r\n    setCurrentLogin: event => dispatch(setCurrentLogin(event)),\r\n    register: (callback) => dispatch(register(callback))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUp);","import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setCurrentRegister,\r\n  setCurrentLogin,\r\n  setUser,\r\n  setMessages,\r\n  register,\r\n  signIn\r\n} from \"../../../../store/actions/user-actions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  offset: theme.mixins.toolbar,\r\n  avatar: {marginRight: theme.spacing(2)},\r\n  grow: {flexGrow: 1},\r\n  icon: {color: \"#616161\"},\r\n  bar: {\r\n    backgroundColor: \"#eeeeee\",\r\n  }\r\n}))\r\n\r\nfunction Navbar(props) {\r\n  const classes = useStyles();\r\n\r\n  function valorAvatar(){\r\n    if(props.ContactoMensajes !== null && props.ContactoMensajes !== undefined){\r\n    return props.ContactoMensajes[0]}else{}\r\n  }\r\n\r\n  function valorNombre(){\r\n    if(props.ContactoMensajes !== null && props.ContactoMensajes !== undefined){\r\n      return <Typography variant=\"h6\" className={classes.icon}>{props.ContactoMensajes}</Typography>}else{\r\n        return <Typography variant=\"h6\" className={classes.icon}>Elija un contacto</Typography>\r\n      }\r\n  }\r\n  return (\r\n    <>\r\n      <AppBar elevation={0} position='relative' className={classes.bar}>\r\n        <Toolbar >\r\n            <Avatar className={classes.avatar}>{valorAvatar()}</Avatar>\r\n            {valorNombre()}\r\n            <div className={classes.grow} />\r\n            {/* <IconButton aria-label=\"options\">              \r\n              <MoreVertIcon className={classes.icon}/>\r\n            </IconButton> */}\r\n        </Toolbar>\r\n      </AppBar>\r\n      {/* <div className={classes.offset} />   */}\r\n    </>\r\n  )\r\n}\r\n\r\n// Acciones y states de redux importadas\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user,\r\n    currentEmail: state.user.currentLogin.email,\r\n    Nombre: state.user.currentUser.Nombre,\r\n    Contacts: state.user.currentContacts,\r\n    Mensajes: state.user.currentMensajes,\r\n    ContactoMensajes: state.user.currentContactMensaje,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCurrentRegister: event => dispatch(setCurrentRegister(event)),\r\n    setCurrentLogin: event => dispatch(setCurrentLogin(event)),\r\n    register: () => dispatch(register()),\r\n    signIn: (callback) => dispatch(signIn(callback)),\r\n    setUser: (informacion) => dispatch(setUser(informacion))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Navbar);","import React  from 'react';\r\nimport { Button, List, ListItem, Paper, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setCurrentRegister,\r\n  setCurrentLogin,\r\n  setUser,\r\n  setMessages,\r\n  register,\r\n  signIn\r\n} from \"../../../../store/actions/user-actions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    backgroundColor: \"#fafafa\",\r\n    paddingTop: 0,\r\n    flex: 1,\r\n    overflow: \"auto\"\r\n  },\r\n  btn: {\r\n    margin: \"0 auto\"\r\n  },\r\n  item: {\r\n    padding: \"8px 16px\",\r\n    maxWidth: \"80%\"\r\n  },\r\n  userMsg: {\r\n    backgroundColor: \"#b9f6ca\"\r\n  },\r\n  right: {\r\n    justifyContent: \"flex-end\"\r\n  }\r\n}))\r\n\r\nfunction MessageList(props) {\r\n  const classes = useStyles();\r\n\r\n  function MostrarMensajes(){\r\n    let arregloMensajes = [];\r\n    for(let mensaje in props.Mensajes){\r\n      if(props.Mensajes[mensaje] !== null && props.Mensajes[mensaje][0] === \"right\"){\r\n        arregloMensajes.push(\r\n          <ListItem className={classes.right}>\r\n          <Paper className={`${classes.item} ${classes.userMsg}`}>\r\n            <Typography \r\n              variant=\"body1\" \r\n              color=\"textPrimary\"\r\n            >\r\n              {props.Mensajes[mensaje][2]}          \r\n            </Typography>\r\n            <Typography \r\n              variant=\"caption\"\r\n              color=\"textSecondary\" \r\n              display=\"block\"\r\n              align=\"right\"\r\n            >\r\n              12:00\r\n            </Typography>\r\n          </Paper>\r\n          </ListItem>\r\n        )\r\n      } \r\n      else if(props.Mensajes[mensaje] !== null && props.Mensajes[mensaje][0] === \"left\"){\r\n        arregloMensajes.push(\r\n          <ListItem>\r\n          <Paper className={classes.item}>\r\n            <Typography \r\n              variant=\"body1\" \r\n              color=\"textPrimary\"\r\n            >\r\n              {props.Mensajes[mensaje][2]}          \r\n            </Typography>\r\n            <Typography \r\n              variant=\"caption\"\r\n              color=\"textSecondary\" \r\n              display=\"block\"\r\n              align=\"right\"\r\n            >\r\n              12:00\r\n            </Typography>\r\n          </Paper>\r\n          </ListItem>\r\n        )\r\n      } \r\n    }\r\n    return arregloMensajes;\r\n  };\r\n\r\n  return (\r\n    <> \r\n      <List className={classes.container}>\r\n        {/* <Button color=\"primary\" fullWidth>Show Previous Message!</Button> */}\r\n        {MostrarMensajes()}\r\n      </List>\r\n    </>\r\n  )\r\n}\r\n\r\n// Acciones y states de redux importadas\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user,\r\n    currentEmail: state.user.currentLogin.email,\r\n    Nombre: state.user.currentUser.Nombre,\r\n    Contacts: state.user.currentContacts,\r\n    Mensajes: state.user.currentMensajes,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCurrentRegister: event => dispatch(setCurrentRegister(event)),\r\n    setCurrentLogin: event => dispatch(setCurrentLogin(event)),\r\n    register: () => dispatch(register()),\r\n    signIn: (callback) => dispatch(signIn(callback)),\r\n    setUser: (informacion) => dispatch(setUser(informacion))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MessageList);","import React from 'react'\r\nimport { AppBar, Toolbar, IconButton, InputBase } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nimport firebase from \"firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setCurrentRegister,\r\n  setCurrentLogin,\r\n  setCurrentClear,\r\n  setUser,\r\n  setMessages,\r\n  setEditingMessage,\r\n  register,\r\n  signIn,\r\n} from \"../../../../store/actions/user-actions\";\r\n\r\nconst useStyles = makeStyles({\r\n  bar: {\r\n    top: \"auto\",\r\n    bottom: 0,\r\n    backgroundColor: \"#eeeeee\"\r\n  },\r\n  input: {\r\n    backgroundColor: \"#ffffff\",\r\n    border: '1px solid #ccc',\r\n    borderRadius: '4px',\r\n    flex: 1,\r\n    padding: \"8px 16px\"\r\n  },\r\n  icon: {\r\n    margin: \"4px\"\r\n  }\r\n})\r\n\r\nfunction MessageEditor(props) {\r\n  const classes = useStyles();\r\n\r\n  function nuevoMensaje(){\r\n    if(props.Mensajes !== null){\r\n      firebase.firestore().collection(props.Nombre).doc(props.ContactoMensajes).update({\r\n        [Object.keys(props.Mensajes).length+1]: [\r\n          \"right\",\r\n          \"12:50\",\r\n          props.editingMessage\r\n        ]}\r\n      )\r\n      .then(function(docRef) {\r\n          console.log(\"Document written with ID: \", docRef.id);\r\n      })\r\n      .catch(function(error) {\r\n          console.error(\"Error adding document: \", error);\r\n      });\r\n      firebase.firestore().collection(props.ContactoMensajes).doc(props.Nombre).update({\r\n        [Object.keys(props.Mensajes).length+1]: [\r\n          \"left\",\r\n          \"12:50\",\r\n          props.editingMessage\r\n        ]}\r\n      )\r\n      .then(function(docRef) {\r\n          console.log(\"Document written with ID: \", docRef.id);\r\n      })\r\n      .catch(function(error) {\r\n          console.error(\"Error adding document: \", error);\r\n      });\r\n      props.setCurrentClear(\"clearEditingMessage\");\r\n    }\r\n  }\r\n\r\n  function limpiarChat(){\r\n    if(props.Mensajes !== null){\r\n      firebase.firestore().collection(props.Nombre).doc(props.ContactoMensajes).set({\r\n        }\r\n      )\r\n      .then(function(docRef) {\r\n          console.log(\"Document written with ID: \", docRef.id);\r\n      })\r\n      .catch(function(error) {\r\n          console.error(\"Error adding document: \", error);\r\n      });\r\n      firebase.firestore().collection(props.ContactoMensajes).doc(props.Nombre).set({\r\n        }\r\n      )\r\n      .then(function(docRef) {\r\n          console.log(\"Document written with ID: \", docRef.id);\r\n      })\r\n      .catch(function(error) {\r\n          console.error(\"Error adding document: \", error);\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <AppBar \r\n        position=\"relative\" \r\n        elevation={0}\r\n        className={classes.bar}\r\n      >\r\n        <Toolbar>\r\n          {/* <IconButton className={classes.icon}>            \r\n            <EmojiIcon />\r\n          </IconButton> */}\r\n          <InputBase value={props.editingMessage} onChange={(e)=>props.setEditingMessage(e.target.value)} className={classes.input} multiline/>\r\n          <IconButton onClick={()=>nuevoMensaje()} className={classes.icon}>            \r\n            <SendIcon />\r\n          </IconButton>\r\n          <IconButton onClick={()=>limpiarChat()} className={classes.icon}>\r\n            <DeleteForeverIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\n// Acciones y states de redux importadas\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user,\r\n    currentEmail: state.user.currentLogin.email,\r\n    Nombre: state.user.currentUser.Nombre,\r\n    Contacts: state.user.currentContacts,\r\n    Mensajes: state.user.currentMensajes,\r\n    ContactoMensajes: state.user.currentContactMensaje,\r\n    editingMessage: state.user.currentEditingMessage,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCurrentRegister: event => dispatch(setCurrentRegister(event)),\r\n    setCurrentLogin: event => dispatch(setCurrentLogin(event)),\r\n    setCurrentClear: clean => dispatch(setCurrentClear(clean)),\r\n    register: () => dispatch(register()),\r\n    signIn: (callback) => dispatch(signIn(callback)),\r\n    setUser: (informacion) => dispatch(setUser(informacion)),\r\n    setEditingMessage: (mensajeNuevo) => dispatch(setEditingMessage(mensajeNuevo))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MessageEditor);","import React from 'react';\r\nimport Navbar from './Componentes-ChatContainer/Navbar';\r\nimport MessageList from './Componentes-ChatContainer/MessageList';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport MessageEditor from './Componentes-ChatContainer/MessageEditor';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    flex: 2,\r\n    height: \"100vh\",\r\n    backgroundColor: \"#fafafa\",\r\n    display: \"flex\",\r\n    flexFlow: \"column nowrap\"\r\n  }\r\n})\r\n\r\nfunction ChatContainer(){\r\n  const classes = useStyles();\r\n  return(\r\n    <div className={classes.container}>\r\n      <Navbar />\r\n      <MessageList />\r\n      <MessageEditor />\r\n    </div>\r\n )\r\n};\r\n\r\nexport default ChatContainer;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  offset: theme.mixins.toolbar,\r\n  grow: {flexGrow: 1},\r\n  icon: {color: \"#616161\"},\r\n  avatar: {marginRight: theme.spacing(2)},\r\n  bgColor: {backgroundColor: \"#eeeeee\"}\r\n}))\r\n\r\nfunction Navbar(props) {\r\n  const classes = useStyles();\r\n\r\n  function ImprimirUsuario(usuario){\r\n    if(props.Nombre !== undefined){\r\n      let nombre = props.Nombre.split(\"\",8);\r\n      return(\r\n        <AppBar elevation={0} position='relative' className={classes.bgColor}>\r\n          <Toolbar >\r\n              <Avatar className={classes.avatar}>{props.Nombre[0]}</Avatar>\r\n              <Typography \r\n                variant=\"h6\"\r\n                className={classes.icon}\r\n              >\r\n                {nombre}\r\n              </Typography>\r\n              <div className={classes.grow} />\r\n              <IconButton \r\n                aria-label=\"new chat\"\r\n                onClick={() => props.toggle(true)}\r\n              >  \r\n                <ChatIcon className={classes.icon}/>\r\n              </IconButton>\r\n              {/* <IconButton aria-label=\"options\">              \r\n                <MoreVertIcon className={classes.icon}/>\r\n              </IconButton> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {ImprimirUsuario()}\r\n    </>\r\n  )\r\n}\r\n\r\n// Acciones y states de redux importadas\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user,\r\n    currentEmail: state.user.currentLogin.email,\r\n    Nombre: state.user.currentUser.Nombre,\r\n    Contacts: state.user.currentContacts,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(Navbar);","import React from 'react'\r\nimport { InputBase, IconButton } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: { \r\n    padding: theme.spacing(1),\r\n    backgroundColor: \"#fafafa\"\r\n  },\r\n  searchBar: {\r\n    display: 'flex',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '4px',\r\n    backgroundColor: '#fff'\r\n  },\r\n  searchInput: {\r\n    flexGrow: 1,\r\n    paddingLeft: theme.spacing(2)\r\n  },\r\n  searchIcon: {\r\n    color: \"#616161\"\r\n  }\r\n}))\r\n\r\nfunction SearchBar() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.searchBar}>\r\n        <InputBase\r\n          className={ classes.searchInput }\r\n          placeholder=\"Search\"\r\n        />\r\n        <IconButton \r\n          className={classes.searchIcon}\r\n        >\r\n          <SearchIcon fontSize=\"small\"/>\r\n        </IconButton>\r\n      </div>\r\n    </div>  \r\n  )\r\n}\r\n\r\nexport default SearchBar\r\n","import React, {useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Button} from '@material-ui/core';\r\n\r\nimport firebase from \"firebase\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  setCurrentRegister,\r\n  setCurrentLogin,\r\n  setUser,\r\n  setMessages,\r\n  register,\r\n  signIn\r\n} from \"../../../../store/actions/user-actions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  btn: {\r\n    padding: theme.spacing(1.5)\r\n  },\r\n  text: {\r\n    textAlign: \"left\",\r\n  },\r\n  item: {\r\n    margin: 0,\r\n    padding: 0\r\n  },\r\n  container: {\r\n    overflow: \"auto\",\r\n    flex: 1,\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n}))\r\n\r\nfunction ConversationList(props) {\r\n  const classes = useStyles();\r\n\r\n  function RecibirMensajes(contacto){\r\n    firebase.firestore().collection(props.Nombre).doc(contacto).onSnapshot(function(mensajes) {\r\n      if(mensajes.exists){props.setMessages(mensajes.data(),contacto);console.log(props.Mensajes);}\r\n      else{alert(\"Problemas de conexion \")}\r\n    });\r\n\r\n  }\r\n\r\n  function ImpresionContactos(Contactos){\r\n    if(Contactos !== null){\r\n    let arregloImpresion = [];\r\n    for (const contacto in Contactos){\r\n      // Para acceder a elementos de la propiedad - console.log(`${contacto} contiene ${Contactos[contacto][2]}`);\r\n      arregloImpresion.push(\r\n      <ListItem divider className={classes.item}> \r\n        <Button \r\n          onClick={()=>{RecibirMensajes(Contactos[contacto][2])}} \r\n          className={classes.btn}\r\n          fullWidth\r\n        >\r\n        <ListItemAvatar>\r\n          <Avatar>{contacto[0]}</Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText \r\n          primary= {Contactos[contacto][2]}\r\n          // secondary= {Contactos[contacto][0]}\r\n          className={classes.text}\r\n        />\r\n        <Typography\r\n          color=\"textSecondary\"\r\n        >\r\n          {/* {Contactos[contacto][1]} */}\r\n        </Typography>\r\n        </Button>\r\n      </ListItem>\r\n    )\r\n    };\r\n      return arregloImpresion;\r\n   \r\n    }else{\r\n      return (\r\n      <ListItem divider>       \r\n        <ListItemText \r\n          primary= \"Cargando...\"\r\n        />\r\n       </ListItem>\r\n      )}\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <List className={classes.container}>\r\n        {ImpresionContactos(props.Contacts)}\r\n      </List>\r\n    </>\r\n  )\r\n}\r\n\r\n// Acciones y states de redux importadas\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user,\r\n    currentEmail: state.user.currentLogin.email,\r\n    Nombre: state.user.currentUser.Nombre,\r\n    Contacts: state.user.currentContacts,\r\n    Mensajes: state.user.currentMensajes,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCurrentRegister: event => dispatch(setCurrentRegister(event)),\r\n    setCurrentLogin: event => dispatch(setCurrentLogin(event)),\r\n    register: () => dispatch(register()),\r\n    signIn: (callback) => dispatch(signIn(callback)),\r\n    setUser: (informacion) => dispatch(setUser(informacion)),\r\n    setMessages: (mensajes,contacto) => dispatch(setMessages(mensajes,contacto))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ConversationList);\r\n","import React from 'react'\r\nimport Navbar from './Componentes-Sidebar/Navbar';\r\nimport SearchBar from './Componentes-Sidebar/SearchBar';\r\nimport ConversationList from './Componentes-Sidebar/ConversationList';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    flex: 1,\r\n    borderRight: \"1px solid #ccc\",\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    flexFlow: \"column nowrap\"\r\n  }\r\n})\r\n\r\nfunction SideBar(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.container}>\r\n        <Navbar toggle={props.toggle}/>\r\n        {/* <SearchBar /> */}\r\n        <ConversationList />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SideBar\r\n","import React, {useEffect, useState} from 'react'\r\nimport { \r\n  makeStyles,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Button,\r\n  Avatar\r\n} from '@material-ui/core'\r\n\r\nimport firebase from 'firebase';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setCurrentRegister,\r\n  setCurrentLogin,\r\n  setUser,\r\n  setMessages,\r\n  register,\r\n  signIn,\r\n  setServerContacts\r\n} from \"../../../../store/actions/user-actions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  btn: {\r\n    padding: theme.spacing(1.5)\r\n  },\r\n  text: {\r\n    textAlign: \"left\",\r\n  },\r\n  item: {\r\n    margin: 0,\r\n    padding: 0\r\n  },\r\n  container: {\r\n    overflow: \"auto\",\r\n    flex: 1,\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n}))\r\n\r\nfunction UserList(props) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    let subscribe = firebase.firestore().collection(\"Usuarios\").onSnapshot(function(collection) {     \r\n      let arregloContactosAgregables = [];     \r\n      // let arrayTasks = [];     \r\n      collection.forEach(doc => {\r\n        //Colocar cada uno de los documentos que obtenga de la base de datos                \r\n        // arrayTasks.push(doc.data());\r\n        arregloContactosAgregables.push(    \r\n          doc.data()\r\n        );\r\n      });\r\n      // console.log(\"Contactos obtenido: \",arrayTasks);\r\n      props.setServerContacts(arregloContactosAgregables);\r\n    });  \r\n    return () => subscribe();\r\n  }, []);\r\n\r\n  function CargandoContactosDisponibles(){\r\n    let ArregloEtiquetas = [];\r\n    if(props.ServerContacts !== []){\r\n      console.log(\"Se ingreso al if\");\r\n      ArregloEtiquetas = props.ServerContacts.map((contacto) => {\r\n        return(\r\n          <ListItem divider className={classes.item}> \r\n          <Button\r\n            className={classes.btn}\r\n            fullWidth\r\n            onClick={() => AgregandoNuevoContacto(props.Nombre, contacto[\"Nombre\"])}\r\n          >\r\n            <ListItemAvatar>\r\n            <Avatar>{contacto.Nombre[0]}</Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText \r\n              primary= {contacto.Nombre}\r\n              className={classes.text}\r\n            />\r\n          </Button>\r\n          </ListItem>\r\n        );\r\n      })\r\n    }\r\n    return ArregloEtiquetas;\r\n  }\r\n\r\n  function AgregandoNuevoContacto(nombre, contacto){\r\n      console.log('cosas del contacto nuevo:',nombre, contacto)\r\n      firebase.firestore().collection(nombre).doc(\"Contactos\").update({\r\n        [contacto]: [\r\n          \"mensaje bajo\",\r\n          \"hora\",\r\n          contacto\r\n        ]\r\n      })\r\n      .then(function(docRef) {\r\n          console.log(\"Document written with ID: \", docRef.id);\r\n      })\r\n      .catch(function(error) {\r\n          console.error(\"Error adding document: \", error);\r\n      });\r\n      firebase.firestore().collection(contacto).doc(nombre).set({\r\n        1: [\r\n          \"left\",\r\n          \"12:50\",\r\n          `Has comenzado una conversacion con ${nombre}`\r\n        ]\r\n      })\r\n      .then(function(docRef) {\r\n          console.log(\"Document written with ID: \", docRef.id);\r\n      })\r\n      .catch(function(error) {\r\n          console.error(\"Error adding document: \", error);\r\n      });\r\n\r\n      firebase.firestore().collection(contacto).doc(\"Contactos\").update({\r\n        [nombre]: [\r\n          \"mensaje bajo\",\r\n          \"hora\",\r\n          nombre\r\n        ]\r\n      })\r\n      .then(function(docRef) {\r\n          console.log(\"Document written with ID: \", docRef.id);\r\n      })\r\n      .catch(function(error) {\r\n          console.error(\"Error adding document: \", error);\r\n      });\r\n      firebase.firestore().collection(nombre).doc(contacto).set({\r\n        1: [\r\n          \"left\",\r\n          \"12:50\",\r\n          `Has comenzado una conversacion con ${contacto}`\r\n        ]\r\n      })\r\n      .then(function(docRef) {\r\n          console.log(\"Document written with ID: \", docRef.id);\r\n      })\r\n      .catch(function(error) {\r\n          console.error(\"Error adding document: \", error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <List className={classes.container}>\r\n      {\r\n        CargandoContactosDisponibles()\r\n      }\r\n    </List>\r\n  )\r\n}\r\n\r\n// Acciones y states de redux importadas\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user,\r\n    currentEmail: state.user.currentLogin.email,\r\n    Nombre: state.user.currentUser.Nombre,\r\n    Contacts: state.user.currentContacts,\r\n    Mensajes: state.user.currentMensajes,\r\n    ServerContacts: state.user.currentServerContacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCurrentRegister: event => dispatch(setCurrentRegister(event)),\r\n    setCurrentLogin: event => dispatch(setCurrentLogin(event)),\r\n    setServerContacts: serverContacts => dispatch(setServerContacts(serverContacts)),\r\n    register: () => dispatch(register()),\r\n    signIn: (callback) => dispatch(signIn(callback)),\r\n    setUser: (informacion) => dispatch(setUser(informacion)),\r\n    setMessages: (mensajes,contacto) => dispatch(setMessages(mensajes,contacto))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UserList);","import React from 'react'\r\nimport { Drawer, makeStyles, IconButton, Typography } from '@material-ui/core'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport SearchBar from './SearchBar'\r\nimport UserList from './UserList'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerWidth: {\r\n    width: '34%',\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: '100%',\r\n    color: '#616161',\r\n    backgroundColor: \"#eeeeee\"\r\n  },\r\n  backButton: {\r\n    marginLeft: '8px',\r\n    marginRight: '8px'\r\n  }\r\n}))\r\n\r\nfunction NewConversation(props) {\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Drawer\r\n      classes={{\r\n        paper: classes.drawerWidth\r\n      }}\r\n      variant='temporary'\r\n      open={props.open}\r\n      onClose={\r\n        () => props.toggle(false)\r\n        // props.toggle ? props.toggle : null\r\n      }\r\n    >\r\n      <div className={classes.toolbar}>\r\n        <div className={classes.header}>\r\n          <IconButton \r\n            className={classes.backButton}\r\n            onClick={() => props.toggle(false)}\r\n          >\r\n            <ArrowBackIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">Generar chat nuevo con:</Typography>     \r\n        </div>\r\n      </div>\r\n      {/* <SearchBar /> */}\r\n      <UserList />\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nexport default NewConversation\r\n","import React, {useEffect, useState} from 'react'\r\nimport ChatContainer from './contenedor-chat/ChatContainer'\r\nimport SideBar from './sidebar/SideBar'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport firebase from \"firebase\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  setCurrentRegister,\r\n  setCurrentLogin,\r\n  setUser,\r\n  setContacts,\r\n  register,\r\n  signIn,\r\n} from \"../../store/actions/user-actions\";\r\nimport NewConversation from './sidebar/Componentes-Sidebar/NewConversation';\r\n\r\nconst useStyle = makeStyles({\r\n  container: {\r\n    display: \"flex\",\r\n    flexFlow: \"row wrap\"\r\n  }\r\n});\r\n\r\nfunction PanelDeInicio(props){\r\n\r\n  useEffect(async () => {\r\n    await firebase.firestore().collection(\"emailUsuarios\").doc(props.currentEmail).get().then(async function(doc) {\r\n      if (doc.exists) {\r\n          await firebase.firestore().collection(\"Usuarios\").doc(doc.data().Nombre).onSnapshot(function(doc2) {\r\n            if(doc2.exists){props.setUser(doc2.data());}\r\n            else{alert(\"Problemas de conexion \")}\r\n          });\r\n          await firebase.firestore().collection(doc.data().Nombre).doc(\"Contactos\").onSnapshot((doc3)=>{\r\n            props.setContacts(doc3.data());\r\n          }).catch(function(error) {\r\n              console.log(\"Error getting document:\", error);\r\n          }); \r\n      } else {            \r\n          console.log(\"No such document!\");\r\n      }\r\n    }).catch(function(error) {\r\n        console.log(\"Error getting document:\", error);\r\n    }); \r\n\r\n  }, []);\r\n  \r\n  const classes = useStyle();\r\n  const [open, setOpen] = useState(false);\r\n  \r\n  const handleToggle = (boolean) => {\r\n    setOpen(boolean)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <SideBar \r\n        toggle={handleToggle}\r\n      />\r\n      <NewConversation \r\n        open={open} \r\n        toggle={handleToggle}\r\n      />\r\n      <ChatContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n// Acciones y states de redux importadas\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user,\r\n    currentEmail: state.user.currentLogin.email,\r\n    Nombre: state.user.currentUser.Nombre,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCurrentRegister: event => dispatch(setCurrentRegister(event)),\r\n    setCurrentLogin: event => dispatch(setCurrentLogin(event)),\r\n    register: () => dispatch(register()),\r\n    signIn: (callback) => dispatch(signIn(callback)),\r\n    setUser: (informacion) => dispatch(setUser(informacion)),\r\n    setContacts: (informacion) => dispatch(setContacts(informacion))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PanelDeInicio);\r\n","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom'\r\nimport IniciarSession from './iniciar-sesion/SignIn';\r\nimport Registrarse from './registrarse/SignUp';\r\nimport PanelDeInicio from './panel-inicio/PanelDeInicio';\r\n// import NewConversation from './panel-inicio/sidebar/Componentes-Sidebar/NewConversation'; Pruebas\r\n\r\n\r\nexport const Enrutador = ()=>{\r\n    return(\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <IniciarSession />\r\n            </Route>\r\n            <Route path=\"/Inicio\">\r\n                <IniciarSession />\r\n            </Route>\r\n            <Route path=\"/Registro\">\r\n                <Registrarse />\r\n            </Route>\r\n            <Route path=\"/Panel-Inicio\">\r\n                <PanelDeInicio />\r\n            </Route>\r\n            {/* <Route path=\"/NewConversation\">\r\n                <NewConversation />\r\n            </Route> */}\r\n        </Switch>\r\n    )\r\n};\r\n\r\nexport default Enrutador;","import React from 'react';\r\nimport './App.css';\r\n\r\n//Componentes importados\r\n// import SignIn from './components/iniciar-sesion/SignIn';\r\n// import SignUp from './components/registrarse/SignUp';\r\n// import Sidebar from './components/panel-inicio/sidebar/SideBar';\r\n// import ChatContainer from './components/panel-inicio/contenedor-chat/ChatContainer';\r\nimport {Enrutador} from './components/enrutador';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Enrutador />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const INITIAL_STATE = {\r\n    currentRegister: {},\r\n    currentLogin: {\r\n      email: \"\"\r\n  },\r\n    currentUser: {},\r\n    currentContacts: null,\r\n    currentContactMensaje: null,\r\n    currentMensajes: null,\r\n    currentEditingMessage: \"\",\r\n    currentServerContacts: [],\r\n  };\r\n  \r\n  const userReducer = (previousState = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case \"SET_CURRENT_REGISTER\":\r\n        return {\r\n          ...previousState,\r\n          currentRegister: {\r\n            ...previousState.currentRegister,\r\n            [action.payload.name]: action.payload.value\r\n          }\r\n        };\r\n      case \"SET_CURRENT_LOGIN\":\r\n        return {\r\n          ...previousState,\r\n          currentLogin: {\r\n            ...previousState.currentLogin,\r\n            [action.payload.name]: action.payload.value\r\n          }\r\n        };\r\n      case \"SET_CURRENT_USER\":\r\n        return {\r\n          ...previousState,\r\n          currentUser: {\r\n            Email: action.payload.Information.Email,\r\n            Nombre: action.payload.Information.Nombre,\r\n            PhotoURL: action.payload.Information.PhotoURL, \r\n          }\r\n        };\r\n      case \"SET_USER_CONTACTS\":\r\n        return{\r\n          ...previousState,\r\n          currentContacts: action.payload\r\n        };\r\n      case \"SET_USER_MESSAGES\":\r\n        return{\r\n          ...previousState,\r\n          currentMensajes: action.payload.messages,\r\n          currentContactMensaje: action.payload.contacto\r\n        };\r\n      case \"SET_EDITING_MESSAGE\":\r\n        return{\r\n          ...previousState,\r\n          currentEditingMessage: action.payload.message,\r\n        };\r\n      case \"SET_SERVER_CONTACTS\":\r\n        return{\r\n          ...previousState,\r\n          currentServerContacts: action.payload.ServerContacts,\r\n        };\r\n      case \"CLEAR_REGISTER\":\r\n        return {\r\n          ...previousState,\r\n          currentRegister: {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n          }\r\n        };\r\n      case \"CLEAR_LOGIN\":\r\n        return {\r\n          ...previousState,\r\n          currentLogin: {...previousState.currentLogin,\r\n            // firstName: \"\",\r\n            // lastName: \"\",\r\n            // email: \"\",\r\n            password: \"\",\r\n          }\r\n        };\r\n      case \"CLEAR_EDITING_MESSAGE\":\r\n        return {\r\n          ...previousState,\r\n          currentEditingMessage: \"\",\r\n        };\r\n      case \"STORAGE_USER_INFO\":\r\n        return{\r\n          ...previousState,\r\n          currentLogin: action.payload\r\n        };\r\n      default:\r\n        return previousState;\r\n    }\r\n  };\r\n  \r\n  export default userReducer;\r\n  ","import { combineReducers, createStore, applyMiddleware } from \"redux\";\r\n\r\nimport userReducer from \"./reducers/user-reducer\";\r\n\r\nimport logger from \"redux-logger\";\r\nimport reduxThunk from \"redux-thunk\";\r\n\r\nconst reducers = combineReducers({\r\n  user: userReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(reduxThunk, logger));\r\n// const store = createStore(reducers, applyMiddleware(reduxThunk));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n//Importaciones para redux\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\n\r\n//importaciones para React-Router\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  <React.StrictMode>\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n  </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}